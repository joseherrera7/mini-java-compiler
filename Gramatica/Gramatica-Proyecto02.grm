ident = (Identifier)  

"Start Symbol" = <Program>
<Program> ::= <Decl><DeclPrima>
<DeclPrima> ::= <Decl> 
<DeclPrima> ::= 
<Decl> ::= <VariableDecl>  
<Decl> ::= <FunctionDecl> 
<Decl> ::= <ConstDecl> 
<Decl> ::= <ClassDecl>
<Decl> ::= <InterfaceDecl>
<VariableDecl> ::= <Variable> ';' <VariableDecl>
<Variable> ::= <Type> ident
<ConstDecl> ::= static <ConstType> ident ';' <ConstDecl>
<ConstType> ::= int 
<ConstType> ::= double
<ConstType> ::= boolean
<ConstType> ::= string
<Type> ::= int
<Type> ::= double
<Type> ::= boolean
<Type> ::= string
<Type> ::= ident 
<Type> ::= <Type> '[]' 
<FunctionDecl> ::= <Type> ident '(' <Formals> ')' <StmtBlock> 
<FunctionDecl> ::= void ident '(' <Formals> ')' <StmtBlock>
<Formals> ::= <Variable> ',' <Formals> 
<Formals> ::= <Variable>
<ClassDecl> ::= class ident <Extends> <Implements> '{' <Field> '}'
<Extends> ::= extends ident | 
<Implements> ::= implements ident ',' <ImplementsPrima>
<ImplementsPrima> ::= <Implements> 
<Field> ::= <VariableDecl> <Field>  
<Field> ::= <FunctionDecl> <Field>
<Field> ::= <ClassDecl> <Field> 
<InterfaceDecl> ::= interface ident '{' <Prototype> '}'
<Prototype> ::= <Type> ident '(' <Formals> ')' ';' <Prototype>
<Prototype> ::= void ident '(' <Formals> ')' ';' <Prototype>
<StmtBlock> ::= '{' <VariableDecl> <ConstDecl> <Stmt> '}'
<Stmt> ::= <ExprStmt> ';' <Stmt>
<ExprStmt> ::= <Expr> |
<Stmt> ::= <ifStmt> <Stmt>
<Stmt> ::= <WhileStmt> <Stmt>
<Stmt> ::= <ForStmt> <Stmt>
<Stmt> ::= <BreakStmt> <Stmt>
<Stmt> ::= <ReturnStmt> <Stmt>
<Stmt> ::= <PrintStmt> <Stmt>
<Stmt> ::= <StmtBlock> <Stmt>
<ifStmt> ::= if '(' <Expr> ')' <Stmt> <ElseStmt>
<ElseStmt>::=  else <Stmt> |
<WhileStmt> ::= while '(' <Expr> ')' <Stmt>
<ForStmt> ::= for '(' <Expr> ';' <Expr> ';' <Expr> ')' <Stmt>
<ReturnStmt> ::= return <Expr> ';' 
<BreakStmt> ::= break ';'
<PrintStmt> ::= 'System.out.println''(' <Expr><ExprPrima> ',' ')'';'
<ExprPrima> ::= <Expr> | 
<Expr> ::= <LValue> '=' <Expr> 
<Expr> ::= <Constant> 
<Expr> ::= <LValue> 
<Expr> ::= this 
<Expr> ::= '(' <Expr> ')' 
<Expr> ::= <Expr> '+' <Expr> 
<Expr> ::= <Expr> '/' <Expr> 
<Expr> ::= <Expr> '%' <Expr> 
<Expr> ::= '-' <Expr> 
<Expr> ::= <Expr> '>' <Expr> 
<Expr> ::= <Expr> '>=' <Expr> 
<Expr> ::= <Expr> '!=' <Expr> 
<Expr> ::= <Expr> '||' <Expr> 
<Expr> ::= '!'<Expr> 
<Expr> ::= New'('ident')'
<LValue> ::= ident 
<LValue> ::= <Expr>'.'ident
<Constant> ::= intConstant 
<Constant> ::= doubleConstant 
<Constant> ::= boolConstant 
<Constant> ::= stringConstant 
<Constant> ::= null

