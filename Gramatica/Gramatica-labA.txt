Program ::= Decl
Decl ::= VariableDecl | FunctionDecl | Decl
VariableDecl ::= Variable ;
Variable ::= Type ident
Type ::= int Z | double Z | bool Z | string Z | ident Z
Z ::= [] Z | epsilon
FunctionDecl ::= Type A' |  void A'
A' ::= ident ( Formals ) StmtIntermedia
StmtIntermedia ::= Stmt StmtIntermedia | epsilon 
Formals ::= Variable VariableIntermedia , | epsilon
VariableIntermedia ::= Variable VariableIntermedia | epsilon
Stmt ::= IfStmt | PrintStmt | Expr ;
IfStmt ::= if ( Expr ) Stmt ElseViene
ElseViene ::= else Stmt | epsilon
PrintStmt ::= Print ( Expr ExprIntermedia , ) ;
ExprIntermedia ::= Expr ExprIntermedia | epsilon
Expr ::= -X | !X | X
X ::= AX'
X' ::= +A X' | -A X' | epsilon
A ::= BA'
A' ::= *B A' | /B A' | %B A' | epsilon
B ::= CB'
B' ::= <C B' | <=C B' | >C B' | >C B' | epsilon
C ::= DC'
C' ::= ==D C' | !=D C' | epsilon
D ::= ED'
D' ::= &&E D' | epsilon
E ::= FE'
E' ::= || F E' | epsilon
F ::= LValue = Expr | Constant | LValue | this | ExprViene | New(ident) 
ExprViene ::= Expr | epsilon
LValue ::= ident | Expr.ident | Expr [Expr]
Constant ::= intConstant | doubleConstant | boolConstant | stringConstant | null


